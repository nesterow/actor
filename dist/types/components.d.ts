/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface ActorLayout {
    /**
    * Add a notification slot at given position. <br> Can be used with alert-styled components like bootstrap's '.alert'. <br><br> Possible values: <br> <pre>'top-left', 'top-right', 'bottom-left', 'bottom-right', 'center', 'top-center', 'bottom-center'</pre>
    */
    'alerts': string;
    /**
    * Add a footer slot. <br><br> Possible values: <pre>'fixed', 'full', 'default'</pre> When footer is 'full' it assumes 100% window width and moves sidebar atop footer
    */
    'footer': string;
    /**
    * Add a header slot. <br><br> Possible values: <pre>'fixed', 'full', 'default'</pre> When header is 'full' it assumes 100% window width and moves sidebar under header
    */
    'header': string;
    /**
    * Add an overlay slot. Can be used to show modal dialogues. <br><br> Accepts: <pre>a css color value, i.e. #CCCCCC </pre>
    */
    'overlay': string;
    /**
    * Add a sidebar slot. <br><br> Possible values: <pre>'fixed', 'default'</pre>
    */
    'sidebar': string;
  }
  interface ActorLayoutAttributes extends StencilHTMLAttributes {
    /**
    * Add a notification slot at given position. <br> Can be used with alert-styled components like bootstrap's '.alert'. <br><br> Possible values: <br> <pre>'top-left', 'top-right', 'bottom-left', 'bottom-right', 'center', 'top-center', 'bottom-center'</pre>
    */
    'alerts'?: string;
    /**
    * Add a footer slot. <br><br> Possible values: <pre>'fixed', 'full', 'default'</pre> When footer is 'full' it assumes 100% window width and moves sidebar atop footer
    */
    'footer'?: string;
    /**
    * Add a header slot. <br><br> Possible values: <pre>'fixed', 'full', 'default'</pre> When header is 'full' it assumes 100% window width and moves sidebar under header
    */
    'header'?: string;
    /**
    * Add an overlay slot. Can be used to show modal dialogues. <br><br> Accepts: <pre>a css color value, i.e. #CCCCCC </pre>
    */
    'overlay'?: string;
    /**
    * Add a sidebar slot. <br><br> Possible values: <pre>'fixed', 'default'</pre>
    */
    'sidebar'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ActorLayout': Components.ActorLayout;
  }

  interface StencilIntrinsicElements {
    'actor-layout': Components.ActorLayoutAttributes;
  }


  interface HTMLActorLayoutElement extends Components.ActorLayout, HTMLStencilElement {}
  var HTMLActorLayoutElement: {
    prototype: HTMLActorLayoutElement;
    new (): HTMLActorLayoutElement;
  };

  interface HTMLElementTagNameMap {
    'actor-layout': HTMLActorLayoutElement
  }

  interface ElementTagNameMap {
    'actor-layout': HTMLActorLayoutElement;
  }


}
